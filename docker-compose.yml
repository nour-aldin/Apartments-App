version: "3.8"

services:
  db:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_DB: apartments_app
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  server:
    volumes:
      - ./server/images:/app/images
    build:
      context: ./server
      dockerfile: Dockerfile
    restart: always
    environment:
      DOCKER_BUILDKIT: 1
      DATABASE_URL: postgresql://postgres:postgres@db:5432/apartments_app
      NODE_ENV: production
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
    command: sh -c "pnpm run start:prod && echo 'Server running at http://localhost:3000' && echo 'API Documentation at http://localhost:3000/api' && tail -f /dev/null"

  client:
    build: ./client
    restart: always
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_SERVER_URL: http://localhost:3000
      NEXT_PRIVATE_SERVER_URL: http://server:3000
    ports:
      - "3001:3001"
    depends_on:
      - server
    command: sh -c "node server.js && echo 'Frontend running at http://localhost:3001' && tail -f /dev/null"

volumes:
  postgres_data:

